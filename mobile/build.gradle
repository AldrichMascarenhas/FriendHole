apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def versionMajor = 0
def versionMinor = 1
def versionPatch = 0

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    flavorDimensions "versionCode"

    defaultConfig {
        applicationId "com.nerdcutlet.friendhole"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionName versionName(versionMajor, versionMinor, versionPatch)
        versionCode versionCode(versionMajor, versionMinor, versionPatch)
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resConfigs "auto"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        production {
            applicationId "com.nerdcutlet.friendhole.prod"
            resValue "string", "app_name", "Friend Hole"
            versionName "${versionName(versionMajor, versionMinor, versionPatch)}"
        }
        staging {
            applicationId "com.nerdcutlet.friendhole.staging"
            resValue "string", "app_name", "FH Staging"
            versionName "${versionName(versionMajor, versionMinor, versionPatch)}"
        }
    }

}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$rootProject.ext.kotlin_version"

    //Android
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.ext.constraintLayoutVersion"

    //Rx
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxandroidVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rootProject.ext.rxkotlinVersion"

    //Retrofit OkHttp
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rootProject.ext.rxadapter"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okhttpVersion"
    implementation "com.google.code.gson:gson:$rootProject.ext.gson"

    //Dagger
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"

    //FireBase
    compile "com.google.firebase:firebase-core:$rootProject.ext.googleServices"
    compile "com.google.firebase:firebase-firestore:$rootProject.ext.googleServices"
    compile "com.google.firebase:firebase-auth:$rootProject.ext.googleServices"
    compile "com.google.firebase:firebase-invites:$rootProject.ext.googleServices"
    implementation "com.firebaseui:firebase-ui-auth:$rootProject.ext.firebaseui"

    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.ext.androidTestRunner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoCoreVersion"

    //Wear
    wearApp project(':wear')
    implementation "com.google.android.gms:play-services-wearable:$rootProject.ext.googleServices"
}

def versionName(major, minor, patch) {
    return "${major}.${minor}.${patch}"
}

def versionCode(major, minor, patch) {
    return major * 10000 + minor * 1000 + patch * 100;
}

apply plugin: "com.google.gms.google-services"
